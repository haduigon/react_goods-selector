{"version":3,"sources":["App.tsx","index.tsx"],"names":["goods","App","state","name","clicked","clear","setState","save","good","event","currentTarget","className","this","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAIaA,EAAQ,CACnB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAQWC,EAAb,4MACEC,MAAQ,CACNC,KAAM,GACNC,SAAS,GAHb,EAMEC,MAAQ,WACN,EAAKC,SAAS,CACZH,KAAM,GACNC,SAAS,KATf,EAaEG,KAAO,SACLC,EACAC,GAEsC,WAAlCA,EAAMC,cAAcC,UACtB,EAAKL,SAAS,CACZH,KAAMK,EACNJ,SAAS,IAGX,EAAKE,SAAS,CACZH,KAAM,GACNC,SAAS,KAzBjB,4CA8BE,WAAU,IAAD,OACP,EAA0BQ,KAAKV,MAAvBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAEd,OACE,uBAAMO,UAAU,oBAAhB,UACE,oBAAIA,UAAU,QAAd,UACe,IAAZP,EAAoB,oBAAsB,OAG7C,qBAAIO,UAAU,sCAAd,WAEe,IAAZP,EAAA,UAAsBD,EAAtB,2BACc,MAEF,IAAZC,EAEG,wBACE,aAAW,iBACX,UAAQ,cACRS,KAAK,SACLF,UAAU,cACVG,QAASF,KAAKP,QAEd,QAMR,uBAAOM,UAAU,QAAjB,SACE,gCACGX,EAAMe,KAAI,SAACP,GAAD,OACT,qBACE,UAAQ,OAERG,UAAWH,IAASL,EAAO,gCAAkC,GAH/D,UAKE,6BACE,wBACE,UAAQ,YACRU,KAAK,SACLF,UAAWH,IAASL,EAAO,iBAAmB,SAC9CW,QAAS,SAACL,GAAD,OAAW,EAAKF,KAAKC,EAAMC,IAJtC,SAMGD,IAASL,EAAO,IAAM,QAI3B,oBACE,UAAQ,YACRQ,UAAU,eAFZ,SAIGH,MAlBEA,iBAhErB,GAAyBQ,IAAMC,WCnB/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7a187772.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goods = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  name: string,\n  clicked: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    name: '',\n    clicked: false,\n  };\n\n  clear = () => {\n    this.setState({\n      name: '',\n      clicked: false,\n    });\n  };\n\n  save = (\n    good: string,\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    if (event.currentTarget.className === 'button') {\n      this.setState({\n        name: good,\n        clicked: true,\n      });\n    } else {\n      this.setState({\n        name: '',\n        clicked: false,\n      });\n    }\n  };\n\n  render() {\n    const { name, clicked } = this.state;\n\n    return (\n      <main className=\"section container\">\n        <h1 className=\"title\">\n          {clicked === false ? 'No goods selected' : null}\n        </h1>\n\n        <h1 className=\"title is-flex is-align-items-center\">\n\n          {clicked === true ? `${name}\n          is selected` : null}\n\n          {clicked === true\n            ? (\n              <button\n                aria-label=\"hide and clear\"\n                data-cy=\"ClearButton\"\n                type=\"button\"\n                className=\"delete ml-3\"\n                onClick={this.clear}\n              />\n            ) : null}\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n\n        </h1>\n\n        <table className=\"table\">\n          <tbody>\n            {goods.map((good: string) => (\n              <tr\n                data-cy=\"Good\"\n                key={good}\n                className={good === name ? 'has-background-success-light ' : ''}\n              >\n                <td>\n                  <button\n                    data-cy=\"AddButton\"\n                    type=\"button\"\n                    className={good === name ? 'button is-info' : 'button'}\n                    onClick={(event) => this.save(good, event)}\n                  >\n                    {good === name ? '-' : '+' }\n\n                  </button>\n                </td>\n                <td\n                  data-cy=\"GoodTitle\"\n                  className=\"is-vcentered\"\n                >\n                  {good}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </main>\n\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}